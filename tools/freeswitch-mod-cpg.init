#!/bin/bash
#
#       /etc/rc.d/init.d/freeswitch
#
#       The FreeSwitch Open Source Voice Platform
#
#  chkconfig: 345 89 14
#  description: Starts and stops the freeswitch server daemon
#  processname: freeswitch
#  config: /opt/freeswitch/conf/freeswitch.conf
#  pidfile: /opt/freeswitch/run/freeswitch.pid
#

# Source function library.
. /etc/init.d/functions

PROG_NAME=freeswitch
MONITOR_NAME=/opt/freeswitch/bin/fs_monitor
PID_FILE=${PID_FILE-/var/run/freeswitch/freeswitch.pid}
FS_USER=${FS_USER-freeswitch}
FS_GROUP=${FS_GROUP-daemon}
FS_FILE=${FS_FILE-/opt/freeswitch/bin/freeswitch} 
FS_HOME=${FS_HOME-/opt/freeswitch}
FS_TIMEOUT=20
LOCK_FILE=/var/lock/subsys/freeswitch
FREESWITCH_ARGS=""
RETVAL=0

# Source options file
if [ -f /etc/sysconfig/freeswitch ]; then
	. /etc/sysconfig/freeswitch
fi

# <define any local shell functions used by the code that follows>

start() {
        ulimit -s 240
        echo -n "Starting $PROG_NAME: "
        if [ -e $LOCK_FILE ]; then
            if [ -e $PID_FILE ] && [ -e /proc/`cat $PID_FILE 2>/dev/null` ]; then
                echo
                echo -n $"$PROG_NAME is already running.";
                failure $"$PROG_NAME is already running.";
                echo
                return 1
            fi
        fi
	cd $FS_HOME
        daemon --pidfile $PID_FILE "$MONITOR_NAME -l $FS_USER -c $FS_FILE >/dev/null 2>&1 &"
		echo
		RETVAL=$?
	TMOUT=$FS_TIMEOUT # max secs to wait
	
	ps ax | grep "freeswitch " | grep -v grep | grep -v monitor > /dev/null 2>&1;
	retval=$?

	while [ $retval != 0 ] ; do
                sleep 1
                TMOUT=`expr $TMOUT - 1`
                if [ $TMOUT -eq 0 ] ; then
                        echo "Error: see fs_monitor in /var/log/messages!"
                        RETVAL=1
			return
                fi
		ps ax | grep "freeswitch " | grep -v grep | grep -v monitor > /dev/null 2>&1
		retval=$?
	done
        [ $RETVAL -eq 0 ] && touch $LOCK_FILE;
	echo
        return $RETVAL
}

stop() {
        echo -n "Shutting down $PROG_NAME: "
        if [ ! -e $LOCK_FILE ]; then
            echo
            echo -n $"cannot stop $PROG_NAME: $PROG_NAME is not running."
            failure $"cannot stop $PROG_NAME: $PROG_NAME is not running."
            echo
            return 1;
        fi
	cd $FS_HOME
	$FS_FILE -stop > /dev/null 2>&1
        killproc $PROG_NAME
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] &&  rm -f $LOCK_FILE;
        return $RETVAL
}

rhstatus() {
	status $PROG_NAME;
}

echo "mod_cpg version"
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status $PROG_NAME
	RETVAL=$?
        ;;
    restart)
        stop
        start
        ;;
    reload)
#        <cause the service configuration to be reread, either with
#        kill -HUP or by restarting the daemons, in a manner similar
#        to restart above>
        ;;
    condrestart)
        [ -f $PID_FILE ] && restart || :
	;;
    *)
        echo "Usage: $PROG_NAME {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
exit $RETVAL
